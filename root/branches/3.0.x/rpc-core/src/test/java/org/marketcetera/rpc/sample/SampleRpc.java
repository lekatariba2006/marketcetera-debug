// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_sample.proto

package org.marketcetera.rpc.sample;

public final class SampleRpc {
  private SampleRpc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf service {@code SampleRpcService}
   */
  public static abstract class SampleRpcService
      implements com.google.protobuf.Service {
    protected SampleRpcService() {}

    public interface Interface {
      /**
       * <code>rpc login(.LoginRequest) returns (.LoginResponse);</code>
       */
      public abstract void login(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LoginRequest request,
          com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LoginResponse> done);

      /**
       * <code>rpc logout(.LogoutRequest) returns (.LogoutResponse);</code>
       */
      public abstract void logout(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LogoutRequest request,
          com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LogoutResponse> done);

      /**
       * <code>rpc heartbeat(.HeartbeatRequest) returns (stream .HeartbeatResponse);</code>
       */
      public abstract void heartbeat(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest request,
          com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse> done);

    }

    public static com.google.protobuf.Service newReflectiveService(
        final Interface impl) {
      return new SampleRpcService() {
        @java.lang.Override
        public  void login(
            com.google.protobuf.RpcController controller,
            org.marketcetera.rpc.base.BaseRpc.LoginRequest request,
            com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LoginResponse> done) {
          impl.login(controller, request, done);
        }

        @java.lang.Override
        public  void logout(
            com.google.protobuf.RpcController controller,
            org.marketcetera.rpc.base.BaseRpc.LogoutRequest request,
            com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LogoutResponse> done) {
          impl.logout(controller, request, done);
        }

        @java.lang.Override
        public  void heartbeat(
            com.google.protobuf.RpcController controller,
            org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest request,
            com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse> done) {
          impl.heartbeat(controller, request, done);
        }

      };
    }

    public static com.google.protobuf.BlockingService
        newReflectiveBlockingService(final BlockingInterface impl) {
      return new com.google.protobuf.BlockingService() {
        public final com.google.protobuf.Descriptors.ServiceDescriptor
            getDescriptorForType() {
          return getDescriptor();
        }

        public final com.google.protobuf.Message callBlockingMethod(
            com.google.protobuf.Descriptors.MethodDescriptor method,
            com.google.protobuf.RpcController controller,
            com.google.protobuf.Message request)
            throws com.google.protobuf.ServiceException {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.callBlockingMethod() given method descriptor for " +
              "wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return impl.login(controller, (org.marketcetera.rpc.base.BaseRpc.LoginRequest)request);
            case 1:
              return impl.logout(controller, (org.marketcetera.rpc.base.BaseRpc.LogoutRequest)request);
            case 2:
              return impl.heartbeat(controller, (org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest)request);
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getRequestPrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getRequestPrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.marketcetera.rpc.base.BaseRpc.LoginRequest.getDefaultInstance();
            case 1:
              return org.marketcetera.rpc.base.BaseRpc.LogoutRequest.getDefaultInstance();
            case 2:
              return org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

        public final com.google.protobuf.Message
            getResponsePrototype(
            com.google.protobuf.Descriptors.MethodDescriptor method) {
          if (method.getService() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
              "Service.getResponsePrototype() given method " +
              "descriptor for wrong service type.");
          }
          switch(method.getIndex()) {
            case 0:
              return org.marketcetera.rpc.base.BaseRpc.LoginResponse.getDefaultInstance();
            case 1:
              return org.marketcetera.rpc.base.BaseRpc.LogoutResponse.getDefaultInstance();
            case 2:
              return org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse.getDefaultInstance();
            default:
              throw new java.lang.AssertionError("Can't get here.");
          }
        }

      };
    }

    /**
     * <code>rpc login(.LoginRequest) returns (.LoginResponse);</code>
     */
    public abstract void login(
        com.google.protobuf.RpcController controller,
        org.marketcetera.rpc.base.BaseRpc.LoginRequest request,
        com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LoginResponse> done);

    /**
     * <code>rpc logout(.LogoutRequest) returns (.LogoutResponse);</code>
     */
    public abstract void logout(
        com.google.protobuf.RpcController controller,
        org.marketcetera.rpc.base.BaseRpc.LogoutRequest request,
        com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LogoutResponse> done);

    /**
     * <code>rpc heartbeat(.HeartbeatRequest) returns (stream .HeartbeatResponse);</code>
     */
    public abstract void heartbeat(
        com.google.protobuf.RpcController controller,
        org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest request,
        com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse> done);

    public static final
        com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptor() {
      return org.marketcetera.rpc.sample.SampleRpc.getDescriptor().getServices().get(0);
    }
    public final com.google.protobuf.Descriptors.ServiceDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }

    public final void callMethod(
        com.google.protobuf.Descriptors.MethodDescriptor method,
        com.google.protobuf.RpcController controller,
        com.google.protobuf.Message request,
        com.google.protobuf.RpcCallback<
          com.google.protobuf.Message> done) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.callMethod() given method descriptor for wrong " +
          "service type.");
      }
      switch(method.getIndex()) {
        case 0:
          this.login(controller, (org.marketcetera.rpc.base.BaseRpc.LoginRequest)request,
            com.google.protobuf.RpcUtil.<org.marketcetera.rpc.base.BaseRpc.LoginResponse>specializeCallback(
              done));
          return;
        case 1:
          this.logout(controller, (org.marketcetera.rpc.base.BaseRpc.LogoutRequest)request,
            com.google.protobuf.RpcUtil.<org.marketcetera.rpc.base.BaseRpc.LogoutResponse>specializeCallback(
              done));
          return;
        case 2:
          this.heartbeat(controller, (org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest)request,
            com.google.protobuf.RpcUtil.<org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse>specializeCallback(
              done));
          return;
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getRequestPrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getRequestPrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.marketcetera.rpc.base.BaseRpc.LoginRequest.getDefaultInstance();
        case 1:
          return org.marketcetera.rpc.base.BaseRpc.LogoutRequest.getDefaultInstance();
        case 2:
          return org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public final com.google.protobuf.Message
        getResponsePrototype(
        com.google.protobuf.Descriptors.MethodDescriptor method) {
      if (method.getService() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "Service.getResponsePrototype() given method " +
          "descriptor for wrong service type.");
      }
      switch(method.getIndex()) {
        case 0:
          return org.marketcetera.rpc.base.BaseRpc.LoginResponse.getDefaultInstance();
        case 1:
          return org.marketcetera.rpc.base.BaseRpc.LogoutResponse.getDefaultInstance();
        case 2:
          return org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse.getDefaultInstance();
        default:
          throw new java.lang.AssertionError("Can't get here.");
      }
    }

    public static Stub newStub(
        com.google.protobuf.RpcChannel channel) {
      return new Stub(channel);
    }

    public static final class Stub extends org.marketcetera.rpc.sample.SampleRpc.SampleRpcService implements Interface {
      private Stub(com.google.protobuf.RpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.RpcChannel channel;

      public com.google.protobuf.RpcChannel getChannel() {
        return channel;
      }

      public  void login(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LoginRequest request,
          com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LoginResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.marketcetera.rpc.base.BaseRpc.LoginResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.marketcetera.rpc.base.BaseRpc.LoginResponse.class,
            org.marketcetera.rpc.base.BaseRpc.LoginResponse.getDefaultInstance()));
      }

      public  void logout(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LogoutRequest request,
          com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.LogoutResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.marketcetera.rpc.base.BaseRpc.LogoutResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.marketcetera.rpc.base.BaseRpc.LogoutResponse.class,
            org.marketcetera.rpc.base.BaseRpc.LogoutResponse.getDefaultInstance()));
      }

      public  void heartbeat(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest request,
          com.google.protobuf.RpcCallback<org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse> done) {
        channel.callMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse.getDefaultInstance(),
          com.google.protobuf.RpcUtil.generalizeCallback(
            done,
            org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse.class,
            org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse.getDefaultInstance()));
      }
    }

    public static BlockingInterface newBlockingStub(
        com.google.protobuf.BlockingRpcChannel channel) {
      return new BlockingStub(channel);
    }

    public interface BlockingInterface {
      public org.marketcetera.rpc.base.BaseRpc.LoginResponse login(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LoginRequest request)
          throws com.google.protobuf.ServiceException;

      public org.marketcetera.rpc.base.BaseRpc.LogoutResponse logout(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LogoutRequest request)
          throws com.google.protobuf.ServiceException;

      public org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse heartbeat(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest request)
          throws com.google.protobuf.ServiceException;
    }

    private static final class BlockingStub implements BlockingInterface {
      private BlockingStub(com.google.protobuf.BlockingRpcChannel channel) {
        this.channel = channel;
      }

      private final com.google.protobuf.BlockingRpcChannel channel;

      public org.marketcetera.rpc.base.BaseRpc.LoginResponse login(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LoginRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.marketcetera.rpc.base.BaseRpc.LoginResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(0),
          controller,
          request,
          org.marketcetera.rpc.base.BaseRpc.LoginResponse.getDefaultInstance());
      }


      public org.marketcetera.rpc.base.BaseRpc.LogoutResponse logout(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.LogoutRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.marketcetera.rpc.base.BaseRpc.LogoutResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(1),
          controller,
          request,
          org.marketcetera.rpc.base.BaseRpc.LogoutResponse.getDefaultInstance());
      }


      public org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse heartbeat(
          com.google.protobuf.RpcController controller,
          org.marketcetera.rpc.base.BaseRpc.HeartbeatRequest request)
          throws com.google.protobuf.ServiceException {
        return (org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse) channel.callBlockingMethod(
          getDescriptor().getMethods().get(2),
          controller,
          request,
          org.marketcetera.rpc.base.BaseRpc.HeartbeatResponse.getDefaultInstance());
      }

    }

    // @@protoc_insertion_point(class_scope:SampleRpcService)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\020rpc_sample.proto\032\016rpc_base.proto2\235\001\n\020S" +
      "ampleRpcService\022&\n\005login\022\r.LoginRequest\032" +
      "\016.LoginResponse\022)\n\006logout\022\016.LogoutReques" +
      "t\032\017.LogoutResponse\0226\n\theartbeat\022\021.Heartb" +
      "eatRequest\032\022.HeartbeatResponse\"\0000\001B+\n\033or" +
      "g.marketcetera.rpc.sampleB\tSampleRpc\210\001\001b" +
      "\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.marketcetera.rpc.base.BaseRpc.getDescriptor(),
        }, assigner);
    org.marketcetera.rpc.base.BaseRpc.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
