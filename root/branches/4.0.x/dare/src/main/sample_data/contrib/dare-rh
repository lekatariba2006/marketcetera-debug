#!/bin/sh
#
# dare         Marketcetera DARE
#
# chkconfig:   345 99 99
# description: dare is a routing engine for automated trading

### BEGIN INIT INFO
# Provides: matp
# Required-Start: $local_fs $network $remote_fs
# Required-Stop: $local_fs $network $remote_fs
# Should-Start: 
# Should-Stop: 
# Default-Start: 3 4 5
# Default-Stop: 0 1 2 6
# Short-Description: This service is a routing engine
# Description: DARE is a Java application that manages a routing engine for automated trading
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

exec_path="/opt/Marketcetera"
exec="${exec_path}/dare/bin/dare.sh"
prog="dare"
config="${exec_path}/dare/conf/application.xml"
out="${exec_path}/dare/logs/dare.out"
user=marketcetera
lockfile=/var/lock/subsys/$prog
pid="${exec_path}/dare/${prog}.pid"
syspid=/var/run/$prog.pid

[ -e /etc/sysconfig/$prog ] && . /etc/sysconfig/$prog

start() {
    [ -x $exec ] || exit 5
    [ -f $config ] || exit 6
    echo -n $"Starting $prog: "
    daemon --user=${user} --pidfile=${syspid} "${exec} > ${out} 2>&1"
    retval=$?
    pidval=$!
    echo
    [ $retval -eq 0 ] && [ -f $pid ] && retval=0
    [ $retval -eq 0 ] && touch $lockfile && cp $pid $syspid
    return $retval
}
stop() {
    echo -n $"Stopping $prog: "
    # stop it here, often "killproc $prog"
    [ -f $syspid ] && kill -0 `cat $syspid` && killproc $prog
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile && rm -f $pid
    return $retval
}

restart() {
    stop
    start
}

reload() {
    restart
}

force_reload() {
    restart
}

rh_status() {
    # run checks to determine if the service is running or use generic status
    status $prog
}

rh_status_q() {
    rh_status >/dev/null 2>&1
}

case "$1" in
    start)
        rh_status_q && exit 0
        $1
        ;;
    stop)
        rh_status_q || exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        rh_status_q || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        rh_status
        ;;
    condrestart|try-restart)
        rh_status_q || exit 0
        restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
exit $?
