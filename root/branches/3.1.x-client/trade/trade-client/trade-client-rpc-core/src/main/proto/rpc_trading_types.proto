syntax = "proto3";
option java_generic_services = true;
option java_package = "org.marketcetera.trading.rpc";
option java_outer_classname = "TradingTypesRpc";
import "rpc_base.proto";

enum OrderType {
    UnknownOrderType = 0;
    Market = 1;
    Limit = 2;
    Stop = 3;
    StopLimit = 4;
    MarketOnClose = 5;
    WithOrWithout = 6;
    LimitOrBetter = 7;
    LimitWithOrWithout = 8;
    OnBasis = 9;
    OnClose = 10;
    LimitOnClose = 11;
    ForexMarket = 12;
    PreviouslyQuoted = 13;
    PreviouslyIndicated = 14;
    ForexLimit = 15;
    ForexSwap = 16;
    ForexPreviouslyQuoted = 17;
    Funari = 18;
    Pegged = 19;
}

enum OrderStatusType {
    New = 0;
    PartiallyFilled = 1;
    Filled = 2;
    DoneForDay = 3;
    Canceled = 4;
    Replaced = 5;
    PendingCancel = 6;
    Stopped = 7;
    Rejected = 8;
    Suspended = 9;
    PendingNew = 10;
    Calculated = 11;
    Expired = 12;
    AcceptedForBidding = 13;
    PendingReplace = 14;
    UnknownOrderStatus = 99;
}

enum Side {
    UnknownSide = 0;
    Buy = 1;
    Sell = 2;
    BuyMinus = 3;
    SellPlus = 4;
    SellShort = 5;
    SellShortExempt = 6;
    Undisclosed = 7;
    Cross = 8;
    CrossShort = 9;
}

enum SecurityType {
    UnknownSecurityType = 0;
    CommonStock = 1;
    Option = 2;
    Future = 3;
    ConvertibleBond = 4;
    Currency = 5;
}

enum OrderCapacity {
    UnknownOrderCapacity = 0;
    Agency = 1;
    Proprietary = 2;
    Individual = 3;
    Principal = 4;
    RisklessPrincipal = 5;
    AgentOtherMember = 6;
}

enum PositionEffect {
    UnknownPositionEffect = 0;
    Open = 1;
    Close = 2;
}

enum TimeInForce {
    UnknownTimeInForce = 0;
    Day = 1;
    GoodTillCancel = 2;
    AtTheOpening = 3;
    ImmediateOrCancel = 4;
    FillOrKill = 5;
    GoodTillCrossing = 6;
    GoodTillDate = 7;
    AtTheClose = 8;
}

message Instrument {
    string symbol = 1;
}

message OpenOrder {
}

message FixMessage {
    Map header = 1;
    Map body = 2;
    Map footer = 3;
}

message FIXOrder {
    string brokerId = 1;
    FixMessage message = 2;
}

message BrokerAlgo {
}

enum MatpOrderType {
    OrderSingleType = 0;
    OrderReplaceType = 1;
    OrderCancelType = 2;
    FIXOrderType = 3;
}

message OrderBase {
    string brokerId = 1;
    string account = 2;
    BrokerAlgo brokerAlgo = 3;
    string brokerOrderId = 4;
    Map customFields = 5;
    Qty displayQuantity = 6;
    string executionDestination = 7;
    Instrument instrument = 8;
    OrderCapacity orderCapacity = 9;
    string orderId = 10;
    OrderType orderType = 11;
    bool pegToMidpoint = 12;
    PositionEffect positionEffect = 13;
    Qty price = 14;
    Qty quantity = 15;
    Side side = 16;
    string text = 17;
    TimeInForce timeInForce = 18;
    string originalOrderId = 19;
}

message Order {
    FIXOrder fixOrder = 1;
    OrderBase orderBase = 2;
    MatpOrderType matpOrderType = 3;
}
