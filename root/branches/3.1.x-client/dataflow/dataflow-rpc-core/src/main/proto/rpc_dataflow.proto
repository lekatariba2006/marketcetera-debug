syntax = "proto3";
import "rpc_base.proto";
option java_generic_services = true;
option java_package = "org.marketcetera.dataflow.rpc";
option java_outer_classname = "DataFlowClientRpc";

message ModuleURN {
    string value = 1;
}

message ModuleInfo {
    string payload = 1;
}

message ProvidersRequest {
    string sessionId = 1;
}

message ProvidersResponse {
    repeated ModuleURN provider = 1;
}

message InstancesRequest {
    string sessionId = 1;
    ModuleURN provider = 2;
}

message InstancesResponse {
    repeated ModuleURN instance = 1;
}

message ModuleInfoRequest {
    string sessionId = 1;
    ModuleURN instance = 2;
}

message ModuleInfoResponse {
    ModuleInfo info = 1;
}

message StartRequest {
    string sessionId = 1;
    ModuleURN instance = 2;
}

message StartResponse {
}

message StopRequest {
    string sessionId = 1;
    ModuleURN instance = 2;
}

message StopResponse {
}

message DeleteRequest {
    string sessionId = 1;
    ModuleURN instance = 2;
}

message DeleteResponse {
}

message SendDataRequest {
    string sessionId = 1;
    string target = 2;
    string payload = 3;
}

message SendDataResponse {
}

service DataFlowClientServiceRpc {
    rpc login(LoginRequest) returns (LoginResponse);
    rpc logout(LogoutRequest) returns (LogoutResponse);
    rpc heartbeat(HeartbeatRequest) returns (stream HeartbeatResponse) {}
    rpc getProviders(ProvidersRequest) returns (ProvidersResponse);
    rpc getInstances(InstancesRequest) returns (InstancesResponse);
    rpc getModuleInfo(ModuleInfoRequest) returns (ModuleInfoResponse);
    rpc start(StartRequest) returns (StartResponse);
    rpc stop(StopRequest) returns (StopResponse);
    rpc delete(DeleteRequest) returns (DeleteResponse);
    rpc sendData(SendDataRequest) returns (SendDataResponse);
}
